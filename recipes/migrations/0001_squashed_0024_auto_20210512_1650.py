# Generated by Django 3.1.8 on 2021-06-02 11:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('recipes', '0001_initial'), ('recipes', '0002_auto_20210305_1501'), ('recipes', '0003_auto_20210305_1505'), ('recipes', '0004_remove_ingredient_description'), ('recipes', '0005_auto_20210305_2352'), ('recipes', '0006_recipe_ingredients_in_recipe'), ('recipes', '0007_recipe_pub_date'), ('recipes', '0008_auto_20210317_1535'), ('recipes', '0009_auto_20210317_1552'), ('recipes', '0010_auto_20210317_1630'), ('recipes', '0011_auto_20210331_1717'), ('recipes', '0012_auto_20210331_1801'), ('recipes', '0013_auto_20210404_1534'), ('recipes', '0014_auto_20210405_1129'), ('recipes', '0015_auto_20210407_1845'), ('recipes', '0016_auto_20210411_1141'), ('recipes', '0017_auto_20210411_1144'), ('recipes', '0018_auto_20210504_1625'), ('recipes', '0019_auto_20210506_1742'), ('recipes', '0020_auto_20210506_1743'), ('recipes', '0021_auto_20210506_1759'), ('recipes', '0022_auto_20210508_1731'), ('recipes', '0023_auto_20210510_1734'), ('recipes', '0024_auto_20210512_1650')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Название ингредиента')),
                ('dimension', models.CharField(max_length=15, verbose_name='Единицы измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Название рецепта')),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipes/')),
                ('description', models.TextField(verbose_name='Описание ингредиента')),
                ('slug', models.SlugField(help_text='Введите краткое название рецепта (англ.)', unique=True, verbose_name='Краткое название рецепта (англ.)')),
                ('time_to_cook', models.PositiveSmallIntegerField(help_text='Введите год выпуска произведения', verbose_name='Время готовки в минутах')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10, unique=True, verbose_name='Имя тэга')),
                ('color', models.CharField(blank=True, max_length=10, verbose_name='Цвет тэга')),
                ('slug', models.SlugField(blank=True, max_length=10, unique=True, verbose_name='Слаг тэга')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
        ),
        migrations.CreateModel(
            name='TagsInRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='recipes.recipe', verbose_name='Рецепт')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='recipes.tag', verbose_name='Тэг')),
            ],
            options={
                'unique_together': {('recipe', 'tag')},
                'verbose_name': 'Тэг рецепта',
                'verbose_name_plural': 'Тэги рецепта',
            },
        ),
        migrations.CreateModel(
            name='IngredientsInRecipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(help_text='Сколько класть?', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='recipes.ingredient', verbose_name='Ингредиент')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Ингредиент в рецепте',
                'verbose_name_plural': 'Ингредиенты в рецепте',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients_in_recipe',
            field=models.ManyToManyField(through='recipes.IngredientsInRecipe', to='recipes.Ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='pub_date',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Дата публикации'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags_in_recipe',
            field=models.ManyToManyField(blank=True, through='recipes.TagsInRecipe', to='recipes.Tag'),
        ),
        migrations.AlterModelOptions(
            name='recipe',
            options={'ordering': ['-pub_date']},
        ),
        migrations.AlterField(
            model_name='recipe',
            name='tags_in_recipe',
            field=models.ManyToManyField(blank=True, through='recipes.TagsInRecipe', to='recipes.Tag', verbose_name='Тэги'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='description',
            field=models.TextField(verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='recipes/', verbose_name='Загрузить фото'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='ingredients_in_recipe',
            field=models.ManyToManyField(through='recipes.IngredientsInRecipe', to='recipes.Ingredient', verbose_name='Ингредиенты'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='time_to_cook',
            field=models.PositiveSmallIntegerField(help_text='Введите время готовки в минутах', verbose_name='Время приготовления'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='time_to_cook',
            field=models.PositiveSmallIntegerField(verbose_name='Время приготовления'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likers', to='recipes.recipe', verbose_name='Рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Юзер')),
            ],
            options={
                'unique_together': {('user', 'recipe')},
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранные',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to=settings.AUTH_USER_MODEL, verbose_name='Юзер')),
            ],
            options={
                'unique_together': {('user', 'author')},
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyers', to='recipes.recipe', verbose_name='Рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL, verbose_name='Юзер')),
            ],
            options={
                'unique_together': {('user', 'recipe')},
                'verbose_name': 'Покупка',
                'verbose_name_plural': 'Покупки',
            },
        ),
        migrations.AlterModelOptions(
            name='recipe',
            options={'ordering': ['-pub_date'], 'verbose_name': 'Рецепт', 'verbose_name_plural': 'Рецепты'},
        ),
        migrations.AlterField(
            model_name='recipe',
            name='time_to_cook',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Время приготовления'),
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.CheckConstraint(check=models.Q(_negated=True, user=django.db.models.expressions.F('author')), name='prevent_self_follow'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='tags_in_recipe',
            field=models.ManyToManyField(through='recipes.TagsInRecipe', to='recipes.Tag', verbose_name='Тэги'),
        ),
        migrations.AlterUniqueTogether(
            name='ingredientsinrecipe',
            unique_together={('recipe', 'ingredient')},
        ),
    ]
